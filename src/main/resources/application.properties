spring.application.name=sat_ifi_sipf
server.port=8081
server.servlet.context-path=/${spring.application.name}
# server.servlet.context-path=/${spring.application.name}/v1

# MONITOREO (ACTUATOR)
# Descomentar si se quieren exponer todos los endpoints de actuator.
# (Por defecto, solo se exponen los endpoints info y health. [https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-endpoints.html])
# management.endpoints.web.exposure.include=*
# Mostrar la informacion de salud a todos los usuarios (tambien a los usuarios sin autorizacion).
management.endpoint.health.show-details=ALWAYS

# EUREKA
# Cada cuanto se registra el servicio con el servidor de Eureka.
eureka.instance.leaseRenewalIntervalInSeconds=30
# Direccion del servidor de Eureka.
eureka.client.serviceUrl.defaultZone=http://eureka:password@apdesatprec01:8761/sat-eureka-server/eureka/

# BASE DE DATOS
spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://rds-comun-pg.cluster-czolhujzwby5.us-east-1.rds.amazonaws.com:5432/sat_rtu
spring.datasource.username=ap_sat_ifi_sipf
spring.datasource.password=desa123$
spring.datasource.sql-script-encoding=UTF-8

# CONFIGURACION DE HIBERNATE
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.type=trace
#spring.jpa.properties.hibernate.generate_statistics=true
spring.jpa.properties.hibernate.jdbc.batch_size=10
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# ACCESO A OTRO MICROSERVICIO POR MEDIO DE EUREKA
# MICROSERVICIO2: nombre en Eureka del microservicio que desea consumirse.
# sat.microservicio2.pingUrl=http://MICROSERVICIO2/path/del/metodo/a/consumir/

sat.consumos.pingUrlInterna=http://svc.vpcd.sat.gob.gt/api/
#sat.consumos.pingUrlInterna=https://rtu.desa.sat.gob.gt/api/
sat.consumos.pingUrlWsOracle=https://desafarm3.sat.gob.gt/consultas-sipf-ws/rest/privado/consulta/
sat.consumos.pingUrlWsSqlServer=https://desafarm3.sat.gob.gt/consultas-prosis-sipf-ws/rest/privado/consulta/
sat.config.siteACS=sat---sipf
sat.config.secretKeyImages=kfjdsklUIOJOIUnjs3332
sat.config.secretKeyProcessInstances=fdsfsadh3893283jfksjdafl
sat.config.acs-secret-key=A1215jkjkja89joqeirnzczDF
sat.config.idPFIMasiva=186186
sat.config.idProcesoInsumo=183183
sat.config.idProcesoCaso=183184
sat.config.idProcesoProgramasFiscales=213213
sat.config.testing=false

sat.config.usrWebServiceOracle=27583546
sat.config.passWebServiceOracle=27583546

sat.config.usrWebServiceProsis=27583546
sat.config.passWebServiceProsis=27583546

# LOG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework=ERROR
logging.level.gt.gob.sat.sat_ifi_sipf=TRACE
logging.level.gt.gob.sat=ERROR
logging.level.io.swagger=ERROR

# CARGA DE ARCHIVOS
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.file-size-threshold=10MB
spring.servlet.multipart.enabled=true
file.upload-dir=./uploads
sat.file.bucket.name=dsat-ifi-sipf

# CODIFICACION
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

# HABILITAR FILTRO EN LAS RESPUESTAS JSON
# Permite el uso de llaves en el query de la peticion
server.tomcat.relaxed-query-chars={,}
# Nivel de anidamiento que puede leer la expresion regular en los filtros
squiggly.deep.nested.query=5
# Indica si se habilita Squiggly filter
squiggly.filter.enabled=true
# Indica si se permite el uso de filtros de squiggly en el servidor
squiggly.filter.annotation.enabled=true
# Indica si se permite el uso de filtros de squiggly en el cliente
squiggly.filter.fields.enabled=true
#id de la app de alfresco
sat.proceso.appId=181181